import streamlit as st
import subprocess
import os

st.set_page_config(page_title="üìä Dashboard Principal", layout="wide")

# Diret√≥rio base
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))

st.title("üöÄ Pipeline de ETL")
st.subheader("Orquestra√ß√£o de Etapas")

# √Årea centralizada de log
st.markdown("### üìú Painel de Logs")
log_area = st.empty()

# Mapeamento de bot√µes e scripts
pipeline_steps = {
    "1. Ingest√£o da API": "01_ingestao_api.py",
    "2. Envio para Landing Zone": "02_envio_landingzone_aws.py",
    "3. Carga Bronze": "03_carga_bronze_aws.py",
    "4. Transforma√ß√£o Silver": "04_transform_silver_aws.py",
    "5. Gera√ß√£o Gold": "05_gera_gold_aws.py"
}

# Renderiza bot√µes
for step_name, script_file in pipeline_steps.items():
    st.divider()
    if st.button(step_name, use_container_width=True):
        try:
            with st.spinner(f"Executando {step_name}..."):
                result = subprocess.run(
                    ["poetry", "run", "python", os.path.join(SCRIPT_DIR, script_file)],
                    check=True,
                    capture_output=True,
                    text=True,
                )
            st.success(f"‚úÖ Etapa '{step_name}' conclu√≠da com sucesso!")
            log_area.code(result.stdout or "Sem sa√≠da gerada", language="bash")
        except subprocess.CalledProcessError as e:
            st.error(f"‚ùå Erro na etapa '{step_name}'!")
            log_area.code(e.stderr or "Sem log de erro", language="bash")
        except Exception as e:
            st.error(f"‚ùå Ocorreu um erro inesperado: {e}")
            log_area.code(str(e), language="bash")

# Visualiza√ß√£o de dados da camada Gold
#st.subheader("Visualiza√ß√£o Camada Gold")
#st.info("Aqui voc√™ pode adicionar c√≥digo para ler os dados da sua camada Gold e exibir um resumo ou gr√°fico.")
